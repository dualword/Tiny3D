#include "shader/util.glsl"
#include "shader/mesh.glsl"

layout(local_size_x = 1) in;

layout(binding = 1, std430) buffer OutCounts {
	CountBuff counter[];
};

layout(binding = 2, std430) buffer Dispatchs {
	DispatchIndirect dispIndirect;
};

layout(binding = 3, std430) buffer IndirectNormal {
	Indirect normals[];
};
layout(binding = 4, std430) buffer IndirectSingle {
	Indirect singles[];
};
layout(binding = 5, std430) buffer IndirectBillbd {
	Indirect billbds[];
};
layout(binding = 6, std430) buffer IndirectAnimat {
	Indirect animats[];
};
layout(binding = 7, std430) buffer IndirectTransp {
	Indirect transps[];
};

uniform uvec4 uMeshCounts;
uniform uint uTransCounts;

void main() {
	uint meshid = gl_GlobalInvocationID.x;
	
	dispIndirect.numx = 0;
	dispIndirect.numy = 1;
	dispIndirect.numz = 1;
	
	bvec4 hasMesh = bvec4(meshid < uMeshCounts.x, 
						  meshid < uMeshCounts.y, 
						  meshid < uMeshCounts.z, 
						  meshid < uMeshCounts.w);
	bool hasTransp = meshid < uTransCounts;
						  
	if(hasMesh.x) {
		normals[meshid].primCount = 0;
		normals[meshid].baseInstance = 0;
		counter[meshid].countBuff.x = 0;
	}
	if(hasMesh.y) {
		singles[meshid].primCount = 0;
		singles[meshid].baseInstance = 0;
		counter[meshid].countBuff.y = 0;
	}
	if(hasMesh.z) {
		billbds[meshid].primCount = 0;
		billbds[meshid].baseInstance = 0;
		counter[meshid].countBuff.z = 0;
	}
	if(hasMesh.w) {
		animats[meshid].primCount = 0;
		animats[meshid].baseInstance = 0;
		counter[meshid].countBuff.w = 0;
	}
	if(hasTransp) {
		transps[meshid].primCount = 0;
		transps[meshid].baseInstance = 0;
		counter[meshid].exCountBuff.x = 0;
	}
}
